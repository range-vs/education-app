package sample;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.layout.BorderPane;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javafx.stage.Stage;

public class TaskController {

    @FXML
    private WebView webViewMain;
    @FXML
    private BorderPane startForm;
    @FXML
    private BorderPane centerForm;

    private Stage _this;
    private WebEngine mainWebEngine;

    @FXML
    public void initialize(){
        mainWebEngine = webViewMain.getEngine();
        String info = "<!DOCTYPE html>" +
                "<html>" +
                "<head>" +
                "<title></title>" +
                "</head>" +
                "<body>" +
                "<h1>Что такое JavaScript?</h1>" +
                "JavaScript изначально создавался для того, чтобы сделать web-странички «живыми». Программы на этом языке называются скриптами. В браузере они подключаются напрямую к HTML и, как только<br> загружается страничка – тут же выполняются.<br>" +
                "<br>" +
                "Программы на JavaScript – обычный текст. Они не требуют какой-то специальной подготовки.<br>" +
                "В этом плане JavaScript сильно отличается от другого языка, который называется Java.<br>" +
                "<br><br>" +
                "<h1>Почему JavaScript?</h1>" +
                "Когда создавался язык JavaScript, у него изначально было другое название: «LiveScript». Но тогда был очень популярен язык Java, и маркетологи решили, что схожее название сделает новый язык <br>более популярным.<br>" +
                "<br>" +
                "Планировалось, что JavaScript будет эдаким «младшим братом» Java. Однако, история распорядилась по-своему, JavaScript сильно вырос, и сейчас это совершенно независимый язык, со своей <br>спецификацией, которая называется ECMAScript, и к Java не имеет никакого отношения.<br>" +
                "<br>" +
                "У него много особенностей, которые усложняют освоение, но по ходу учебника мы с ними разберёмся.<br>" +
                "<br>" +
                "JavaScript может выполняться не только в браузере, а где угодно, нужна лишь специальная программа – интерпретатор. Процесс выполнения скрипта называют «интерпретацией».<br>" +
                "<br>" +
                "<h1>Компиляция и интерпретация, для программистов</h1>" +
                "Для выполнения программ, не важно на каком языке, существуют два способа: «компиляция» и «интерпретация».<br>" +
                "<br>" +
                "Компиляция – это когда исходный код программы, при помощи специального инструмента, другой программы, которая называется «компилятор», преобразуется в другой язык, как правило – в машинный <br>код. Этот машинный код затем распространяется и запускается. При этом исходный код программы остаётся у разработчика.<br>" +
                "Интерпретация – это когда исходный код программы получает другой инструмент, который называют «интерпретатор», и выполняет его «как есть». При этом распространяется именно сам исходный код<br> (скрипт). Этот подход применяется в браузерах для JavaScript.<br>" +
                "Современные интерпретаторы перед выполнением преобразуют JavaScript в машинный код или близко к нему, оптимизируют, а уже затем выполняют. И даже во время выполнения стараются <br>оптимизировать. Поэтому JavaScript работает очень быстро.<br>" +
                "<br>" +
                "Во все основные браузеры встроен интерпретатор JavaScript, именно поэтому они могут выполнять скрипты на странице. Но, разумеется, JavaScript можно использовать не только в браузере. Это <br>полноценный язык, программы на котором можно запускать и на сервере, и даже в стиральной машинке, если в ней установлен соответствующий интерпретатор.<br>" +
                "<br>" +
                "" +
                "<h1>Что умеет JavaScript?</h1>" +
                "Современный JavaScript – это «безопасный» язык программирования общего назначения. Он не предоставляет низкоуровневых средств работы с памятью, процессором, так как изначально был <br>ориентирован на браузеры, в которых это не требуется.<br>" +
                "<br>" +
                "Что же касается остальных возможностей – они зависят от окружения, в котором запущен JavaScript. В браузере JavaScript умеет делать всё, что относится к манипуляции со страницей, <br>взаимодействию с посетителем и, в какой-то мере, с сервером:<br>" +
                "<br><ul>" +
                "<li>Создавать новые HTML-теги, удалять существующие, менять стили элементов, прятать, показывать элементы и т.п.<br></li>" +
                "<li>Реагировать на действия посетителя, обрабатывать клики мыши, перемещения курсора, нажатия на клавиатуру и т.п.<br></li>" +
                "<li>Посылать запросы на сервер и загружать данные без перезагрузки страницы (эта технология называется \"AJAX\").<br></li>" +
                "<li>Получать и устанавливать cookie, запрашивать данные, выводить сообщения…<br></li>" +
                "<li>…и многое, многое другое!<br></li>" +
                "</ul>" +
                "<br>" +
                "Теперь, когда Вы получили основную информацию о Java Script, перейдём непосредственно к изучению языка!<br>" +
                "Для продолжения нажмите \"Вперёд\".<br>" +
                "</body>" +
                "</html>";
        mainWebEngine.loadContent(info);
    }

    public void closeWindow(ActionEvent actionEvent) {
        _this.close();
    }

    public void setThisStage(Stage st){
        _this = st;
    }

    public void openTasks(ActionEvent actionEvent) {
        startForm.setVisible(false);
        centerForm.setVisible(true);
    }

    public void clickBack(ActionEvent actionEvent) {
        startForm.setVisible(true);
        centerForm.setVisible(false);
    }
}
